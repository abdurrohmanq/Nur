<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnBack" xml:space="preserve">
    <value>⬅️ Back</value>
  </data>
  <data name="btnBasket" xml:space="preserve">
    <value>🛒 Basket</value>
  </data>
  <data name="btnCancel" xml:space="preserve">
    <value>Cancel 🔴</value>
  </data>
  <data name="btnClearCart" xml:space="preserve">
    <value>🧹 Cleaning</value>
  </data>
  <data name="btnConfirmation" xml:space="preserve">
    <value>✅ Confirmation</value>
  </data>
  <data name="btnDelivery" xml:space="preserve">
    <value>🚖 Delivery</value>
  </data>
  <data name="btnEditLanguage" xml:space="preserve">
    <value>🇬🇧 Select language!</value>
  </data>
  <data name="btnEditPersonalInfo" xml:space="preserve">
    <value>🔄 Change personal information</value>
  </data>
  <data name="btnFeedback" xml:space="preserve">
    <value>✍️ Comment</value>
  </data>
  <data name="btnFullName" xml:space="preserve">
    <value>Edit Full Name</value>
  </data>
  <data name="btnInfo" xml:space="preserve">
    <value>ℹ️ Information</value>
  </data>
  <data name="btnMainMenu" xml:space="preserve">
    <value>🏠 Main menu</value>
  </data>
  <data name="btnOrder" xml:space="preserve">
    <value>🛍 Place an order</value>
  </data>
  <data name="btnPaymentTypeCash" xml:space="preserve">
    <value>💵 cash</value>
  </data>
  <data name="btnPaymentTypeClick" xml:space="preserve">
    <value>💳 Click</value>
  </data>
  <data name="btnPaymentTypePayme" xml:space="preserve">
    <value>💳 Payme</value>
  </data>
  <data name="btnPhone" xml:space="preserve">
    <value>📞 Contact us</value>
  </data>
  <data name="btnPhoneNumber" xml:space="preserve">
    <value>Edit phone number</value>
  </data>
  <data name="btnPlaceOrder" xml:space="preserve">
    <value>🚖 Placing an order</value>
  </data>
  <data name="btnRequestContact" xml:space="preserve">
    <value>Send phone number</value>
  </data>
  <data name="btnSetting" xml:space="preserve">
    <value>⚙️ Settings</value>
  </data>
  <data name="btnTakeAway" xml:space="preserve">
    <value>🏃 Take away</value>
  </data>
  <data name="choose-language" xml:space="preserve">
    <value>Select Language</value>
  </data>
  <data name="GetContact" xml:space="preserve">
    <value>Your number has been accepted!</value>
  </data>
  <data name="greeting" xml:space="preserve">
    <value>Hello! Welcome to Nur canteen</value>
  </data>
  <data name="ibtnEn" xml:space="preserve">
    <value>🇬🇧  english language</value>
  </data>
  <data name="ibtnRu" xml:space="preserve">
    <value>🇷🇺  русский язык</value>
  </data>
  <data name="ibtnUz" xml:space="preserve">
    <value>🇺🇿  o'zbek tili</value>
  </data>
  <data name="OpenToMenu" xml:space="preserve">
    <value>Start ordering! 😊</value>
  </data>
  <data name="RequestForFullName" xml:space="preserve">
    <value>Enter your full name:</value>
  </data>
  <data name="RequestToContact" xml:space="preserve">
    <value>Enter your phone number or submit by clicking the button below!</value>
  </data>
  <data name="select-menu" xml:space="preserve">
    <value>Make your choice!</value>
  </data>
  <data name="txtAddedProductInCart" xml:space="preserve">
    <value>{0} {1} added to cart!</value>
  </data>
  <data name="txtAnew" xml:space="preserve">
    <value>Shall we start over?</value>
  </data>
  <data name="txtBad" xml:space="preserve">
    <value>Bad 🚫</value>
  </data>
  <data name="txtCartEmpty" xml:space="preserve">
    <value>Cart is empty</value>
  </data>
  <data name="txtCartEmptyInfo" xml:space="preserve">
    <value>Your cart is empty. Choose a product to order!</value>
  </data>
  <data name="txtCartReleased" xml:space="preserve">
    <value>Cart was empty!</value>
  </data>
  <data name="txtCleanCartInfo" xml:space="preserve">
    <value>"❌ &lt;Product name&gt; - remove from cart\n" +
"🧹 Cleaning" - completely empty the basket",</value>
  </data>
  <data name="txtComments" xml:space="preserve">
    <value>Comments:</value>
  </data>
  <data name="txtContactInfo" xml:space="preserve">
    <value>You can call &lt;&lt;+998905710460&gt;&gt; to contact us!</value>
  </data>
  <data name="txtContinueOrder" xml:space="preserve">
    <value>Do we continue to order? 😋</value>
  </data>
  <data name="txtCurrentFullName" xml:space="preserve">
    <value>Your current full name: {0}</value>
  </data>
  <data name="txtDislike" xml:space="preserve">
    <value>Dislike 👎🏻</value>
  </data>
  <data name="txtEmptyCategory" xml:space="preserve">
    <value>There are currently no products in this category.</value>
  </data>
  <data name="txtErrorDeleteCart" xml:space="preserve">
    <value>Cart not cleared! Please try again if there is a problem!</value>
  </data>
  <data name="txtFeedback" xml:space="preserve">
    <value>Thank you for choosing us!\n
Leave a comment or rate our service!</value>
  </data>
  <data name="txtGood" xml:space="preserve">
    <value>Good ✨</value>
  </data>
  <data name="txtInfo" xml:space="preserve">
    <value>Nur Cafe is a national and dietary food center.
[Instagram](https://www.instagram.com/nur_kafe_andijon/)  
[Facebook](https://www.facebook.com/nur.parxez/?show_switched_toast=0&amp;show_invite_to_follow=0&amp;show_switched_tooltip=0&amp;show_podcast_settings=0&amp;show_community_review_changes=0&amp;show_community_rollback=0&amp;show_follower_visibility_disclosure=0)  
Our address is 👇</value>
  </data>
  <data name="txtInputProductQuantity" xml:space="preserve">
    <value>Enter the quantity of the selected product or select one of the buttons below!</value>
  </data>
  <data name="txtMenuPersonalInfo" xml:space="preserve">
    <value>Choose to change your personal information</value>
  </data>
  <data name="txtNewFullName" xml:space="preserve">
    <value>Enter your new Full Name:</value>
  </data>
  <data name="txtNoComment" xml:space="preserve">
    <value>No further comment</value>
  </data>
  <data name="txtNotEnoughProduct" xml:space="preserve">
    <value>We do not have the product in the quantity you entered!</value>
  </data>
  <data name="txtNotFoundProduct" xml:space="preserve">
    <value>There is no such product!</value>
  </data>
  <data name="txtNotReceiveLocation" xml:space="preserve">
    <value>No address information found. Send it again!</value>
  </data>
  <data name="txtOccureErrorInputQuantity" xml:space="preserve">
    <value>Could not add product to cart! Please try again!</value>
  </data>
  <data name="txtOnRoad" xml:space="preserve">
    <value>Order on the way...
Arrives in minutes!</value>
  </data>
  <data name="txtOrderCancel" xml:space="preserve">
    <value>Order cancelled.</value>
  </data>
  <data name="txtOrderType" xml:space="preserve">
    <value>Order type:</value>
  </data>
  <data name="txtPaymentType" xml:space="preserve">
    <value>💴 Payment type:</value>
  </data>
  <data name="txtPendingOrder" xml:space="preserve">
    <value>The order has been placed on pending. Please wait a moment.</value>
  </data>
  <data name="txtPhone" xml:space="preserve">
    <value>☎️ Phone:</value>
  </data>
  <data name="txtPhoneError" xml:space="preserve">
    <value>The number was entered incorrectly!
Example: "+998901234567"</value>
  </data>
  <data name="txtPrepared" xml:space="preserve">
    <value>The order is ready! Will be delivered soon.</value>
  </data>
  <data name="txtPreparing" xml:space="preserve">
    <value>Order is being prepared. Will be delivered soon.</value>
  </data>
  <data name="txtProductPrice" xml:space="preserve">
    <value>💰 *Price:* {0}</value>
  </data>
  <data name="txtReceiveLocation" xml:space="preserve">
    <value>Your address has been accepted!</value>
  </data>
  <data name="txtRemovedCartItem" xml:space="preserve">
    <value>{0} removed from cart!</value>
  </data>
  <data name="txtRequestForLocation" xml:space="preserve">
    <value>Where should your order be delivered 🚙?</value>
  </data>
  <data name="txtRequestToOrderType" xml:space="preserve">
    <value>Pick up your order yourself or choose 'Delivery'</value>
  </data>
  <data name="txtSelectCategory" xml:space="preserve">
    <value>Choose a product category!</value>
  </data>
  <data name="txtSelectedLanguage" xml:space="preserve">
    <value>Well, we will continue with you in English!</value>
  </data>
  <data name="txtSelectPaymentType" xml:space="preserve">
    <value>Choose a payment method for your order!</value>
  </data>
  <data name="txtSelectProduct" xml:space="preserve">
    <value>Select product!</value>
  </data>
  <data name="txtSendLocation" xml:space="preserve">
    <value>📍 Send current address</value>
  </data>
  <data name="txtSettings" xml:space="preserve">
    <value>⚙️ Settings</value>
  </data>
  <data name="txtTakeAwayLocation" xml:space="preserve">
    <value>Nur cafe location 👇</value>
  </data>
  <data name="txtTextLocation" xml:space="preserve">
    <value>Address in text view is not possible!</value>
  </data>
  <data name="txtThankFeedback" xml:space="preserve">
    <value>Thank you! Thanks for your thoughts and feedback!</value>
  </data>
  <data name="txtTotalPrice" xml:space="preserve">
    <value>Total: {0} soums</value>
  </data>
  <data name="txtVeryGood" xml:space="preserve">
    <value>I liked everything 👍</value>
  </data>
  <data name="txtWriteCommentForOrder" xml:space="preserve">
    <value>If you have any additional comments, please leave a comment:</value>
  </data>
  <data name="txtWrongInputProduct" xml:space="preserve">
    <value>Delete with just a click of a button!</value>
  </data>
  <data name="txtWrongQuantity" xml:space="preserve">
    <value>Invalid amount entered. Please enter a valid number!</value>
  </data>
  <data name="txtYourOrder" xml:space="preserve">
    <value>Your order:</value>
  </data>
</root>